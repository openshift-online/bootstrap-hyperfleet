apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: test-github-auth
  namespace: hub-provisioner
spec:
  tasks:
    - name: test-ssh-auth
      taskSpec:
        steps:
          - name: test
            image: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel9@sha256:cbd89c531953a43b8055bda72f7696be80f57fd1d782567a91d82e0fbcb3d26d
            env:
              - name: SSH_PRIVATE_KEY
                valueFrom:
                  secretKeyRef:
                    name: github-repo-credentials
                    key: ssh-privatekey
            script: |
              #!/bin/bash
              set -e
              
              echo "üîê Testing GitHub SSH authentication..."
              echo ""
              
              # Setup SSH
              mkdir -p "${HOME}/.ssh"
              chmod 700 "${HOME}/.ssh"
              
              echo "$SSH_PRIVATE_KEY" > "${HOME}/.ssh/id_ed25519"
              chmod 600 "${HOME}/.ssh/id_ed25519"
              
              # Add GitHub to known hosts
              echo "üìã Adding GitHub to known hosts..."
              ssh-keyscan github.com >> "${HOME}/.ssh/known_hosts" 2>/dev/null
              
              # Test SSH connection
              echo "üîç Testing SSH connection to GitHub..."
              ssh -T -i "${HOME}/.ssh/id_ed25519" -o StrictHostKeyChecking=no git@github.com 2>&1 || true
              echo ""
              
              # Configure git
              git config --global user.name "Hub Provisioner Pipeline"
              git config --global user.email "hub-provisioner@bootstrap.red-chesterfield.com"
              
              # Test clone
              echo "üì¶ Testing clone with SSH..."
              WORK_DIR=$(mktemp -d)
              cd "$WORK_DIR"
              
              export GIT_SSH_COMMAND="ssh -i ${HOME}/.ssh/id_ed25519 -o StrictHostKeyChecking=no"
              
              if git clone git@github.com:openshift-online/bootstrap-hyperfleet.git .; then
                echo "‚úÖ Clone successful"
                echo "üìÅ Repository contents:"
                ls -la | head -10
              else
                echo "‚ùå Clone failed"
                exit 1
              fi
              
              # Test write access
              echo ""
              echo "üîç Testing write access..."
              git checkout -b "test-auth-$(date +%s)"
              echo "test-$(date)" > test-file.txt
              git add test-file.txt
              git commit -m "Test commit - will not be pushed"
              
              echo "üì§ Testing push (dry-run)..."
              if git push --dry-run origin HEAD; then
                echo "‚úÖ Write access confirmed"
              else
                echo "‚ùå Write access denied"
                exit 1
              fi
              
              echo ""
              echo "‚úÖ SUCCESS: GitHub SSH authentication works!"
---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: test-github-auth-run-2
  namespace: hub-provisioner
spec:
  pipelineRef:
    name: test-github-auth
